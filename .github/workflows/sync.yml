name: Sync

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  repo-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: matrix
        with:
          script: |
            const result = await github.graphql(`{ 
              organization(login:"${context.payload.organization.login}") {
                repositories(first:100) {
                  nodes {
                    name
                  }
                }
              }
            }`);
            console.log(JSON.stringify(result, null, 2));
            return result.organization.repositories.nodes.map(repo => repo.name);
    outputs:
      repos: ${{ steps.matrix.outputs.result }}
  
  repo-print:
    needs: repo-matrix
    strategy:
      matrix:
        repo: ${{ fromJson(needs.repo-matrix.outputs.repos) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ matrix.repo }} repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.organization.login }}/${{ matrix.repo }}
          path: ${{ github.event.organization.login }}
